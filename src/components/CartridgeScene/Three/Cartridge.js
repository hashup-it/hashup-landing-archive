/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useLoader } from '@react-three/fiber'
import * as THREE from 'three'

export default function Model({ ...props }) {
    const group = useRef()
    const { nodes } = useGLTF('/assets/models/scene/cartridge.gltf')
    const cartridgeAo = useLoader(THREE.TextureLoader, '/assets/models/scene/cartridge_AO.png')
    const metallicMap = useLoader(THREE.TextureLoader, '/assets/models/scene/cartridge_Metallic.png')
    const normalOpenGlMap = useLoader(THREE.TextureLoader, '/assets/models/scene/cartridge_Normal_OpenGL.png')
    const opacityMap = useLoader(THREE.TextureLoader, '/assets/models/scene/cartridge_Opacity.png')
    const roughnessMap = useLoader(THREE.TextureLoader, '/assets/models/scene/cartridge_Roughness.png')

    return (
        <group ref={group} {...props} dispose={null}>
            <mesh
                geometry={nodes.cartridge.geometry}
                material={nodes.cartridge.material}
                rotation={[Math.PI / 2, 0, 0]}
            >
                <meshStandardMaterial
                    attach={'material'}
                    roughnessMap={roughnessMap}
                    alphaMap={opacityMap}
                    metalnessMap={metallicMap}
                    aoMap={cartridgeAo}
                />
            </mesh>
        </group>
    )
}

useGLTF.preload('/assets/models/scene/cartridge.gltf')
